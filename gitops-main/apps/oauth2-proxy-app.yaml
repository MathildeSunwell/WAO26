---
apiVersion: v1
kind: Namespace
metadata:
  name: oauth2-proxy
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: oauth2-proxy
  namespace: argocd
spec:
  project: default
  source:
    repoURL: https://oauth2-proxy.github.io/manifests
    chart: oauth2-proxy
    targetRevision: 7.12.9
    helm:
      valuesObject:
        resources:
          limits:
            cpu: 100m
            memory: 300Mi
          requests:
            cpu: 100m
            memory: 300Mi
        config:
          clientID: "1033853639507-tfke0q2htjg2552a2stc0j1g3tsllnd3.apps.googleusercontent.com"
          clientSecret: "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"
          cookieSecret: "964pyCsU2iCeuN4UssLEK/xtQSptjAzoaPNNn8URhf0="
          configFile: |-
            provider = "oidc"
            oidc_issuer_url = "https://accounts.google.com"
            redirect_url = "https://swwao-courses.orbit.au.dk/grp-7/oauth2/callback"
            email_domains = [ "*" ]
            cookie_secure = true
            cookie_httponly = true
            # tell proxy how to reach your frontend once authenticated
            upstreams = [ "http://pizza-frontend.default.svc.cluster.local:3000" ]
        # Turn on the built-in Ingress in the chart and lock everything behind oauth2
        ingress:
          enabled: true
          hosts:
            - swwao-courses.orbit.au.dk
          annotations:
            kubernetes.io/ingress.class: nginx
            nginx.ingress.kubernetes.io/auth-url: "http://oauth2-proxy.default.svc.cluster.local:4180/oauth2/auth"
            nginx.ingress.kubernetes.io/auth-signin: "https://$host/oauth2/start?rd=$escaped_request_uri"
            nginx.ingress.kubernetes.io/auth-response-headers: "x-auth-request-user,x-auth-request-email"

  destination:
    server: https://kubernetes.default.svc
    namespace: oauth2-proxy
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
